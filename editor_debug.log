[2025-02-14 21:05:10] Syntax tree generated successfully
[2025-02-14 21:05:10] Root node type: source_file
[2025-02-14 21:05:10] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:05:10] Node 1: kind=use, text="use"
[2025-02-14 21:05:10] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:05:10] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:05:10] Node 4: kind=::, text="::"
[2025-02-14 21:05:10] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:05:10] Node 6: kind={, text="{"
[2025-02-14 21:05:10] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:05:10] Node 8: kind=identifier, text="event"
[2025-02-14 21:05:10] Node 9: kind=::, text="::"
[2025-02-14 21:05:16] Syntax tree generated successfully
[2025-02-14 21:05:16] Root node type: source_file
[2025-02-14 21:05:16] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:05:16] Node 1: kind=use, text="use"
[2025-02-14 21:05:16] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:05:16] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:05:16] Node 4: kind=::, text="::"
[2025-02-14 21:05:16] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:05:16] Node 6: kind={, text="{"
[2025-02-14 21:05:16] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:05:16] Node 8: kind=identifier, text="event"
[2025-02-14 21:05:16] Node 9: kind=::, text="::"
[2025-02-14 21:06:21] Syntax tree generated successfully
[2025-02-14 21:06:21] Root node type: source_file
[2025-02-14 21:06:21] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:06:21] Node 1: kind=use, text="use"
[2025-02-14 21:06:21] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:21] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:06:21] Node 4: kind=::, text="::"
[2025-02-14 21:06:21] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:21] Node 6: kind={, text="{"
[2025-02-14 21:06:21] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:06:21] Node 8: kind=identifier, text="event"
[2025-02-14 21:06:21] Node 9: kind=::, text="::"
[2025-02-14 21:06:40] Syntax tree generated successfully
[2025-02-14 21:06:40] Root node type: source_file
[2025-02-14 21:06:40] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:06:40] Node 1: kind=use, text="use"
[2025-02-14 21:06:40] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:40] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:06:40] Node 4: kind=::, text="::"
[2025-02-14 21:06:40] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:40] Node 6: kind={, text="{"
[2025-02-14 21:06:40] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:06:40] Node 8: kind=identifier, text="event"
[2025-02-14 21:06:40] Node 9: kind=::, text="::"
[2025-02-14 21:06:41] Syntax tree generated successfully
[2025-02-14 21:06:41] Root node type: source_file
[2025-02-14 21:06:41] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:06:41] Node 1: kind=use, text="use"
[2025-02-14 21:06:41] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:41] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:06:41] Node 4: kind=::, text="::"
[2025-02-14 21:06:41] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:41] Node 6: kind={, text="{"
[2025-02-14 21:06:41] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:06:41] Node 8: kind=identifier, text="event"
[2025-02-14 21:06:41] Node 9: kind=::, text="::"
[2025-02-14 21:06:53] Syntax tree generated successfully
[2025-02-14 21:06:53] Root node type: source_file
[2025-02-14 21:06:53] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:06:53] Node 1: kind=use, text="use"
[2025-02-14 21:06:53] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:53] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:06:53] Node 4: kind=::, text="::"
[2025-02-14 21:06:53] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:06:53] Node 6: kind={, text="{"
[2025-02-14 21:06:53] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:06:53] Node 8: kind=identifier, text="event"
[2025-02-14 21:06:53] Node 9: kind=::, text="::"
[2025-02-14 21:07:51] Syntax tree generated successfully
[2025-02-14 21:07:51] Root node type: source_file
[2025-02-14 21:07:51] Node 0: kind=use_declaration, text="cuse crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:07:51] Node 1: kind=use, text="cus"
[2025-02-14 21:07:51] Node 2: kind=scoped_use_list, text=" crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n"
[2025-02-14 21:07:51] Node 3: kind=identifier, text=" crosster"
[2025-02-14 21:07:51] Node 4: kind=::, text="m:"
[2025-02-14 21:07:51] Node 5: kind=use_list, text=":{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n"
[2025-02-14 21:07:51] Node 6: kind={, text=":"
[2025-02-14 21:07:51] Node 7: kind=scoped_use_list, text=" event::{self, Event, KeyCode"
[2025-02-14 21:07:51] Node 8: kind=identifier, text=" even"
[2025-02-14 21:07:51] Node 9: kind=::, text="t:"
[2025-02-14 21:07:54] Syntax tree generated successfully
[2025-02-14 21:07:54] Root node type: source_file
[2025-02-14 21:07:54] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:07:54] Node 1: kind=use, text="use"
[2025-02-14 21:07:54] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:07:54] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:07:54] Node 4: kind=::, text="::"
[2025-02-14 21:07:54] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:07:54] Node 6: kind={, text="{"
[2025-02-14 21:07:54] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:07:54] Node 8: kind=identifier, text="event"
[2025-02-14 21:07:54] Node 9: kind=::, text="::"
[2025-02-14 21:08:23] Syntax tree generated successfully
[2025-02-14 21:08:23] Root node type: source_file
[2025-02-14 21:08:23] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:08:23] Node 1: kind=use, text="use"
[2025-02-14 21:08:23] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:08:23] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:08:23] Node 4: kind=::, text="::"
[2025-02-14 21:08:23] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:08:23] Node 6: kind={, text="{"
[2025-02-14 21:08:23] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:08:23] Node 8: kind=identifier, text="event"
[2025-02-14 21:08:23] Node 9: kind=::, text="::"
[2025-02-14 21:08:25] Syntax tree generated successfully
[2025-02-14 21:08:25] Root node type: source_file
[2025-02-14 21:08:25] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:08:25] Node 1: kind=use, text="use"
[2025-02-14 21:08:25] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:08:25] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:08:25] Node 4: kind=::, text="::"
[2025-02-14 21:08:25] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:08:25] Node 6: kind={, text="{"
[2025-02-14 21:08:25] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:08:25] Node 8: kind=identifier, text="event"
[2025-02-14 21:08:25] Node 9: kind=::, text="::"
[2025-02-14 21:09:52] Syntax tree generated successfully
[2025-02-14 21:09:52] Root node type: source_file
[2025-02-14 21:09:52] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:09:52] Node 1: kind=use, text="use"
[2025-02-14 21:09:52] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:09:52] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:09:52] Node 4: kind=::, text="::"
[2025-02-14 21:09:52] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:09:52] Node 6: kind={, text="{"
[2025-02-14 21:09:52] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:09:52] Node 8: kind=identifier, text="event"
[2025-02-14 21:09:52] Node 9: kind=::, text="::"
[2025-02-14 21:11:53] Syntax tree generated successfully
[2025-02-14 21:11:53] Root node type: source_file
[2025-02-14 21:11:53] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:11:53] Node 1: kind=use, text="use"
[2025-02-14 21:11:53] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:11:53] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:11:53] Node 4: kind=::, text="::"
[2025-02-14 21:11:53] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:11:53] Node 6: kind={, text="{"
[2025-02-14 21:11:53] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:11:53] Node 8: kind=identifier, text="event"
[2025-02-14 21:11:53] Node 9: kind=::, text="::"
[2025-02-14 21:12:04] Syntax tree generated successfully
[2025-02-14 21:12:04] Root node type: source_file
[2025-02-14 21:12:04] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:04] Node 1: kind=use, text="use"
[2025-02-14 21:12:04] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:04] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:04] Node 4: kind=::, text="::"
[2025-02-14 21:12:04] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:04] Node 6: kind={, text="{"
[2025-02-14 21:12:04] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:04] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:04] Node 9: kind=::, text="::"
[2025-02-14 21:12:10] Syntax tree generated successfully
[2025-02-14 21:12:10] Root node type: source_file
[2025-02-14 21:12:10] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:10] Node 1: kind=use, text="use"
[2025-02-14 21:12:10] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:10] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:10] Node 4: kind=::, text="::"
[2025-02-14 21:12:10] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:10] Node 6: kind={, text="{"
[2025-02-14 21:12:10] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:10] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:10] Node 9: kind=::, text="::"
[2025-02-14 21:12:19] Syntax tree generated successfully
[2025-02-14 21:12:19] Root node type: source_file
[2025-02-14 21:12:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:19] Node 1: kind=use, text="use"
[2025-02-14 21:12:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:19] Node 4: kind=::, text="::"
[2025-02-14 21:12:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:19] Node 6: kind={, text="{"
[2025-02-14 21:12:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:19] Node 9: kind=::, text="::"
[2025-02-14 21:12:20] Syntax tree generated successfully
[2025-02-14 21:12:20] Root node type: source_file
[2025-02-14 21:12:20] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:20] Node 1: kind=use, text="use"
[2025-02-14 21:12:20] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:20] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:20] Node 4: kind=::, text="::"
[2025-02-14 21:12:20] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:20] Node 6: kind={, text="{"
[2025-02-14 21:12:20] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:20] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:20] Node 9: kind=::, text="::"
[2025-02-14 21:12:22] Syntax tree generated successfully
[2025-02-14 21:12:22] Root node type: source_file
[2025-02-14 21:12:22] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:22] Node 1: kind=use, text="use"
[2025-02-14 21:12:22] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:22] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:22] Node 4: kind=::, text="::"
[2025-02-14 21:12:22] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:22] Node 6: kind={, text="{"
[2025-02-14 21:12:22] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:22] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:22] Node 9: kind=::, text="::"
[2025-02-14 21:12:22] Syntax tree generated successfully
[2025-02-14 21:12:22] Root node type: source_file
[2025-02-14 21:12:22] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:22] Node 1: kind=use, text="use"
[2025-02-14 21:12:22] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:22] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:22] Node 4: kind=::, text="::"
[2025-02-14 21:12:22] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:22] Node 6: kind={, text="{"
[2025-02-14 21:12:22] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:22] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:22] Node 9: kind=::, text="::"
[2025-02-14 21:12:24] Syntax tree generated successfully
[2025-02-14 21:12:24] Root node type: source_file
[2025-02-14 21:12:24] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:24] Node 1: kind=use, text="use"
[2025-02-14 21:12:24] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:24] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:24] Node 4: kind=::, text="::"
[2025-02-14 21:12:24] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:24] Node 6: kind={, text="{"
[2025-02-14 21:12:24] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:24] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:24] Node 9: kind=::, text="::"
[2025-02-14 21:12:26] Syntax tree generated successfully
[2025-02-14 21:12:26] Root node type: source_file
[2025-02-14 21:12:26] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:12:26] Node 1: kind=use, text="use"
[2025-02-14 21:12:26] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:26] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:12:26] Node 4: kind=::, text="::"
[2025-02-14 21:12:26] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:12:26] Node 6: kind={, text="{"
[2025-02-14 21:12:26] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:12:26] Node 8: kind=identifier, text="event"
[2025-02-14 21:12:26] Node 9: kind=::, text="::"
[2025-02-14 21:13:18] Syntax tree generated successfully
[2025-02-14 21:13:18] Root node type: source_file
[2025-02-14 21:13:18] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:18] Node 1: kind=use, text="use"
[2025-02-14 21:13:18] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:18] Node 4: kind=::, text="::"
[2025-02-14 21:13:18] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 6: kind={, text="{"
[2025-02-14 21:13:18] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:18] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:18] Node 9: kind=::, text="::"
[2025-02-14 21:13:18] Syntax tree generated successfully
[2025-02-14 21:13:18] Root node type: source_file
[2025-02-14 21:13:18] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:18] Node 1: kind=use, text="use"
[2025-02-14 21:13:18] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:18] Node 4: kind=::, text="::"
[2025-02-14 21:13:18] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 6: kind={, text="{"
[2025-02-14 21:13:18] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:18] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:18] Node 9: kind=::, text="::"
[2025-02-14 21:13:18] Syntax tree generated successfully
[2025-02-14 21:13:18] Root node type: source_file
[2025-02-14 21:13:18] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:18] Node 1: kind=use, text="use"
[2025-02-14 21:13:18] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:18] Node 4: kind=::, text="::"
[2025-02-14 21:13:18] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 6: kind={, text="{"
[2025-02-14 21:13:18] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:18] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:18] Node 9: kind=::, text="::"
[2025-02-14 21:13:18] Syntax tree generated successfully
[2025-02-14 21:13:18] Root node type: source_file
[2025-02-14 21:13:18] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:18] Node 1: kind=use, text="use"
[2025-02-14 21:13:18] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:18] Node 4: kind=::, text="::"
[2025-02-14 21:13:18] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 6: kind={, text="{"
[2025-02-14 21:13:18] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:18] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:18] Node 9: kind=::, text="::"
[2025-02-14 21:13:18] Syntax tree generated successfully
[2025-02-14 21:13:18] Root node type: source_file
[2025-02-14 21:13:18] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:18] Node 1: kind=use, text="use"
[2025-02-14 21:13:18] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:18] Node 4: kind=::, text="::"
[2025-02-14 21:13:18] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:18] Node 6: kind={, text="{"
[2025-02-14 21:13:18] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:18] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:18] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:19] Syntax tree generated successfully
[2025-02-14 21:13:19] Root node type: source_file
[2025-02-14 21:13:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:19] Node 1: kind=use, text="use"
[2025-02-14 21:13:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:19] Node 4: kind=::, text="::"
[2025-02-14 21:13:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:19] Node 6: kind={, text="{"
[2025-02-14 21:13:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:19] Node 9: kind=::, text="::"
[2025-02-14 21:13:20] Syntax tree generated successfully
[2025-02-14 21:13:20] Root node type: source_file
[2025-02-14 21:13:20] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:20] Node 1: kind=use, text="use"
[2025-02-14 21:13:20] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:20] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:20] Node 4: kind=::, text="::"
[2025-02-14 21:13:20] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:20] Node 6: kind={, text="{"
[2025-02-14 21:13:20] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:20] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:20] Node 9: kind=::, text="::"
[2025-02-14 21:13:20] Syntax tree generated successfully
[2025-02-14 21:13:20] Root node type: source_file
[2025-02-14 21:13:20] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:20] Node 1: kind=use, text="use"
[2025-02-14 21:13:20] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:20] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:20] Node 4: kind=::, text="::"
[2025-02-14 21:13:20] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:20] Node 6: kind={, text="{"
[2025-02-14 21:13:20] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:20] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:20] Node 9: kind=::, text="::"
[2025-02-14 21:13:21] Syntax tree generated successfully
[2025-02-14 21:13:21] Root node type: source_file
[2025-02-14 21:13:21] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:21] Node 1: kind=use, text="use"
[2025-02-14 21:13:21] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:21] Node 4: kind=::, text="::"
[2025-02-14 21:13:21] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 6: kind={, text="{"
[2025-02-14 21:13:21] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:21] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:21] Node 9: kind=::, text="::"
[2025-02-14 21:13:21] Syntax tree generated successfully
[2025-02-14 21:13:21] Root node type: source_file
[2025-02-14 21:13:21] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:21] Node 1: kind=use, text="use"
[2025-02-14 21:13:21] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:21] Node 4: kind=::, text="::"
[2025-02-14 21:13:21] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 6: kind={, text="{"
[2025-02-14 21:13:21] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:21] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:21] Node 9: kind=::, text="::"
[2025-02-14 21:13:21] Syntax tree generated successfully
[2025-02-14 21:13:21] Root node type: source_file
[2025-02-14 21:13:21] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:21] Node 1: kind=use, text="use"
[2025-02-14 21:13:21] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:21] Node 4: kind=::, text="::"
[2025-02-14 21:13:21] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:21] Node 6: kind={, text="{"
[2025-02-14 21:13:21] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:21] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:21] Node 9: kind=::, text="::"
[2025-02-14 21:13:22] Syntax tree generated successfully
[2025-02-14 21:13:22] Root node type: source_file
[2025-02-14 21:13:22] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:22] Node 1: kind=use, text="use"
[2025-02-14 21:13:22] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:22] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:22] Node 4: kind=::, text="::"
[2025-02-14 21:13:22] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:22] Node 6: kind={, text="{"
[2025-02-14 21:13:22] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:22] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:22] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:28] Syntax tree generated successfully
[2025-02-14 21:13:28] Root node type: source_file
[2025-02-14 21:13:28] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:28] Node 1: kind=use, text="use"
[2025-02-14 21:13:28] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:28] Node 4: kind=::, text="::"
[2025-02-14 21:13:28] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:28] Node 6: kind={, text="{"
[2025-02-14 21:13:28] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:28] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:28] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:29] Syntax tree generated successfully
[2025-02-14 21:13:29] Root node type: source_file
[2025-02-14 21:13:29] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:29] Node 1: kind=use, text="use"
[2025-02-14 21:13:29] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:29] Node 4: kind=::, text="::"
[2025-02-14 21:13:29] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:29] Node 6: kind={, text="{"
[2025-02-14 21:13:29] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:29] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:29] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:30] Syntax tree generated successfully
[2025-02-14 21:13:30] Root node type: source_file
[2025-02-14 21:13:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:30] Node 1: kind=use, text="use"
[2025-02-14 21:13:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:30] Node 4: kind=::, text="::"
[2025-02-14 21:13:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:30] Node 6: kind={, text="{"
[2025-02-14 21:13:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:30] Node 9: kind=::, text="::"
[2025-02-14 21:13:31] Syntax tree generated successfully
[2025-02-14 21:13:31] Root node type: source_file
[2025-02-14 21:13:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:31] Node 1: kind=use, text="use"
[2025-02-14 21:13:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:31] Node 4: kind=::, text="::"
[2025-02-14 21:13:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:31] Node 6: kind={, text="{"
[2025-02-14 21:13:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:31] Node 9: kind=::, text="::"
[2025-02-14 21:13:35] Syntax tree generated successfully
[2025-02-14 21:13:35] Root node type: source_file
[2025-02-14 21:13:35] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:13:35] Node 1: kind=use, text="use"
[2025-02-14 21:13:35] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:35] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:13:35] Node 4: kind=::, text="::"
[2025-02-14 21:13:35] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:13:35] Node 6: kind={, text="{"
[2025-02-14 21:13:35] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:13:35] Node 8: kind=identifier, text="event"
[2025-02-14 21:13:35] Node 9: kind=::, text="::"
[2025-02-14 21:15:17] Syntax tree generated successfully
[2025-02-14 21:15:17] Root node type: source_file
[2025-02-14 21:15:17] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:15:17] Node 1: kind=use, text="use"
[2025-02-14 21:15:17] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:17] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:15:17] Node 4: kind=::, text="::"
[2025-02-14 21:15:17] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:17] Node 6: kind={, text="{"
[2025-02-14 21:15:17] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:15:17] Node 8: kind=identifier, text="event"
[2025-02-14 21:15:17] Node 9: kind=::, text="::"
[2025-02-14 21:15:25] Syntax tree generated successfully
[2025-02-14 21:15:25] Root node type: source_file
[2025-02-14 21:15:25] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:15:25] Node 1: kind=use, text="use"
[2025-02-14 21:15:25] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:25] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:15:25] Node 4: kind=::, text="::"
[2025-02-14 21:15:25] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:25] Node 6: kind={, text="{"
[2025-02-14 21:15:25] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:15:25] Node 8: kind=identifier, text="event"
[2025-02-14 21:15:25] Node 9: kind=::, text="::"
[2025-02-14 21:15:26] Syntax tree generated successfully
[2025-02-14 21:15:26] Root node type: source_file
[2025-02-14 21:15:26] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:15:26] Node 1: kind=use, text="use"
[2025-02-14 21:15:26] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:26] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:15:26] Node 4: kind=::, text="::"
[2025-02-14 21:15:26] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:15:26] Node 6: kind={, text="{"
[2025-02-14 21:15:26] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:15:26] Node 8: kind=identifier, text="event"
[2025-02-14 21:15:26] Node 9: kind=::, text="::"
[2025-02-14 21:17:19] Syntax tree generated successfully
[2025-02-14 21:17:19] Root node type: source_file
[2025-02-14 21:17:19] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:17:19] Node 1: kind=use, text="use"
[2025-02-14 21:17:19] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:17:19] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:17:19] Node 4: kind=::, text="::"
[2025-02-14 21:17:19] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:17:19] Node 6: kind={, text="{"
[2025-02-14 21:17:19] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:17:19] Node 8: kind=identifier, text="event"
[2025-02-14 21:17:19] Node 9: kind=::, text="::"
[2025-02-14 21:18:45] Syntax tree generated successfully
[2025-02-14 21:18:45] Root node type: source_file
[2025-02-14 21:18:45] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:18:45] Node 1: kind=use, text="use"
[2025-02-14 21:18:45] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:18:45] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:18:45] Node 4: kind=::, text="::"
[2025-02-14 21:18:45] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:18:45] Node 6: kind={, text="{"
[2025-02-14 21:18:45] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:18:45] Node 8: kind=identifier, text="event"
[2025-02-14 21:18:45] Node 9: kind=::, text="::"
[2025-02-14 21:19:30] Syntax tree generated successfully
[2025-02-14 21:19:30] Root node type: source_file
[2025-02-14 21:19:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:30] Node 1: kind=use, text="use"
[2025-02-14 21:19:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:30] Node 4: kind=::, text="::"
[2025-02-14 21:19:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 6: kind={, text="{"
[2025-02-14 21:19:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:30] Node 9: kind=::, text="::"
[2025-02-14 21:19:30] Syntax tree generated successfully
[2025-02-14 21:19:30] Root node type: source_file
[2025-02-14 21:19:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:30] Node 1: kind=use, text="use"
[2025-02-14 21:19:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:30] Node 4: kind=::, text="::"
[2025-02-14 21:19:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 6: kind={, text="{"
[2025-02-14 21:19:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:30] Node 9: kind=::, text="::"
[2025-02-14 21:19:30] Syntax tree generated successfully
[2025-02-14 21:19:30] Root node type: source_file
[2025-02-14 21:19:30] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:30] Node 1: kind=use, text="use"
[2025-02-14 21:19:30] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:30] Node 4: kind=::, text="::"
[2025-02-14 21:19:30] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:30] Node 6: kind={, text="{"
[2025-02-14 21:19:30] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:30] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:30] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:31] Syntax tree generated successfully
[2025-02-14 21:19:31] Root node type: source_file
[2025-02-14 21:19:31] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:31] Node 1: kind=use, text="use"
[2025-02-14 21:19:31] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:31] Node 4: kind=::, text="::"
[2025-02-14 21:19:31] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:31] Node 6: kind={, text="{"
[2025-02-14 21:19:31] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:31] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:31] Node 9: kind=::, text="::"
[2025-02-14 21:19:32] Syntax tree generated successfully
[2025-02-14 21:19:32] Root node type: source_file
[2025-02-14 21:19:32] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:32] Node 1: kind=use, text="use"
[2025-02-14 21:19:32] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:32] Node 4: kind=::, text="::"
[2025-02-14 21:19:32] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 6: kind={, text="{"
[2025-02-14 21:19:32] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:32] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:32] Node 9: kind=::, text="::"
[2025-02-14 21:19:32] Syntax tree generated successfully
[2025-02-14 21:19:32] Root node type: source_file
[2025-02-14 21:19:32] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:32] Node 1: kind=use, text="use"
[2025-02-14 21:19:32] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:32] Node 4: kind=::, text="::"
[2025-02-14 21:19:32] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 6: kind={, text="{"
[2025-02-14 21:19:32] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:32] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:32] Node 9: kind=::, text="::"
[2025-02-14 21:19:32] Syntax tree generated successfully
[2025-02-14 21:19:32] Root node type: source_file
[2025-02-14 21:19:32] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:32] Node 1: kind=use, text="use"
[2025-02-14 21:19:32] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:32] Node 4: kind=::, text="::"
[2025-02-14 21:19:32] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 6: kind={, text="{"
[2025-02-14 21:19:32] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:32] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:32] Node 9: kind=::, text="::"
[2025-02-14 21:19:32] Syntax tree generated successfully
[2025-02-14 21:19:32] Root node type: source_file
[2025-02-14 21:19:32] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:32] Node 1: kind=use, text="use"
[2025-02-14 21:19:32] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:32] Node 4: kind=::, text="::"
[2025-02-14 21:19:32] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 6: kind={, text="{"
[2025-02-14 21:19:32] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:32] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:32] Node 9: kind=::, text="::"
[2025-02-14 21:19:32] Syntax tree generated successfully
[2025-02-14 21:19:32] Root node type: source_file
[2025-02-14 21:19:32] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:32] Node 1: kind=use, text="use"
[2025-02-14 21:19:32] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:32] Node 4: kind=::, text="::"
[2025-02-14 21:19:32] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:32] Node 6: kind={, text="{"
[2025-02-14 21:19:32] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:32] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:32] Node 9: kind=::, text="::"
[2025-02-14 21:19:35] Syntax tree generated successfully
[2025-02-14 21:19:35] Root node type: source_file
[2025-02-14 21:19:35] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:35] Node 1: kind=use, text="use"
[2025-02-14 21:19:35] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:35] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:35] Node 4: kind=::, text="::"
[2025-02-14 21:19:35] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:35] Node 6: kind={, text="{"
[2025-02-14 21:19:35] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:35] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:35] Node 9: kind=::, text="::"
[2025-02-14 21:19:36] Syntax tree generated successfully
[2025-02-14 21:19:36] Root node type: source_file
[2025-02-14 21:19:36] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:36] Node 1: kind=use, text="use"
[2025-02-14 21:19:36] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:36] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:36] Node 4: kind=::, text="::"
[2025-02-14 21:19:36] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:36] Node 6: kind={, text="{"
[2025-02-14 21:19:36] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:36] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:36] Node 9: kind=::, text="::"
[2025-02-14 21:19:37] Syntax tree generated successfully
[2025-02-14 21:19:37] Root node type: source_file
[2025-02-14 21:19:37] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:37] Node 1: kind=use, text="use"
[2025-02-14 21:19:37] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:37] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:37] Node 4: kind=::, text="::"
[2025-02-14 21:19:37] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:37] Node 6: kind={, text="{"
[2025-02-14 21:19:37] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:37] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:37] Node 9: kind=::, text="::"
[2025-02-14 21:19:37] Syntax tree generated successfully
[2025-02-14 21:19:37] Root node type: source_file
[2025-02-14 21:19:37] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:37] Node 1: kind=use, text="use"
[2025-02-14 21:19:37] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:37] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:37] Node 4: kind=::, text="::"
[2025-02-14 21:19:37] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:37] Node 6: kind={, text="{"
[2025-02-14 21:19:37] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:37] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:37] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:38] Syntax tree generated successfully
[2025-02-14 21:19:38] Root node type: source_file
[2025-02-14 21:19:38] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:38] Node 1: kind=use, text="use"
[2025-02-14 21:19:38] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:38] Node 4: kind=::, text="::"
[2025-02-14 21:19:38] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:38] Node 6: kind={, text="{"
[2025-02-14 21:19:38] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:38] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:38] Node 9: kind=::, text="::"
[2025-02-14 21:19:39] Syntax tree generated successfully
[2025-02-14 21:19:39] Root node type: source_file
[2025-02-14 21:19:39] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:39] Node 1: kind=use, text="use"
[2025-02-14 21:19:39] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:39] Node 4: kind=::, text="::"
[2025-02-14 21:19:39] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 6: kind={, text="{"
[2025-02-14 21:19:39] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:39] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:39] Node 9: kind=::, text="::"
[2025-02-14 21:19:39] Syntax tree generated successfully
[2025-02-14 21:19:39] Root node type: source_file
[2025-02-14 21:19:39] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:39] Node 1: kind=use, text="use"
[2025-02-14 21:19:39] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:39] Node 4: kind=::, text="::"
[2025-02-14 21:19:39] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 6: kind={, text="{"
[2025-02-14 21:19:39] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:39] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:39] Node 9: kind=::, text="::"
[2025-02-14 21:19:39] Syntax tree generated successfully
[2025-02-14 21:19:39] Root node type: source_file
[2025-02-14 21:19:39] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:39] Node 1: kind=use, text="use"
[2025-02-14 21:19:39] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:39] Node 4: kind=::, text="::"
[2025-02-14 21:19:39] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 6: kind={, text="{"
[2025-02-14 21:19:39] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:39] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:39] Node 9: kind=::, text="::"
[2025-02-14 21:19:39] Syntax tree generated successfully
[2025-02-14 21:19:39] Root node type: source_file
[2025-02-14 21:19:39] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:39] Node 1: kind=use, text="use"
[2025-02-14 21:19:39] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:39] Node 4: kind=::, text="::"
[2025-02-14 21:19:39] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:39] Node 6: kind={, text="{"
[2025-02-14 21:19:39] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:39] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:39] Node 9: kind=::, text="::"
[2025-02-14 21:19:52] Syntax tree generated successfully
[2025-02-14 21:19:52] Root node type: source_file
[2025-02-14 21:19:52] Node 0: kind=use_declaration, text="use crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n};"
[2025-02-14 21:19:52] Node 1: kind=use, text="use"
[2025-02-14 21:19:52] Node 2: kind=scoped_use_list, text="crossterm::{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:52] Node 3: kind=identifier, text="crossterm"
[2025-02-14 21:19:52] Node 4: kind=::, text="::"
[2025-02-14 21:19:52] Node 5: kind=use_list, text="{\n    event::{self, Event, KeyCode},\n    execute,\n    terminal::{disable_raw_mode, enable_raw_mode, EnterAlternateScreen, LeaveAlternateScreen},\n}"
[2025-02-14 21:19:52] Node 6: kind={, text="{"
[2025-02-14 21:19:52] Node 7: kind=scoped_use_list, text="event::{self, Event, KeyCode}"
[2025-02-14 21:19:52] Node 8: kind=identifier, text="event"
[2025-02-14 21:19:52] Node 9: kind=::, text="::"
